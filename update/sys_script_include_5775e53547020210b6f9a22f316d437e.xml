<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_58872_needit.NeedItUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Utils Script Include for the NeedIt application.</description>
        <name>NeedItUtils</name>
        <script><![CDATA[var NeedItUtils = Class.create();
NeedItUtils.prototype = {
    initialize: function() {},

    isDatePast: function(strDate) {
        // Create GlideDateTime objects for the current date and the passed in date
        var rightnow = new GlideDateTime();
        var testdate = new GlideDateTime(strDate);

        // If the testdate is before rightnow, return true, else return false
        if (testdate.before(rightnow)) {
            return true;
        } else {
            return false;
        }
    },

	//My soultion
//     isDateToday: function(strDate) {
//         //get tiday's date
//         var today = new GlideDateTime();
//         //modify it to include time
//         today = today.getDate().toString();
//         today += " 23:59:59";

//         //type undefined without creating new object
//         var timeToCheck = new GlideDateTime(today);
//         var whenNeededGlobal = new GlideDateTime(strDate);
//         var whenNeededLocal = whenNeededGlobal.getDisplayValue();

//         //type undefined without creating new object
//         var whenNeeded = new GlideDateTime(whenNeededLocal);

//         if (whenNeeded.onOrBefore(timeToCheck)) {
//             return true;
//         } else {
//             return false;
//         }
//     },
	
	isDateToday: function(strDate){
    
    // Create GlideDateTime objects for the current date and the passed in date
    var rightnow = new GlideDateTime();
    var testdate = new GlideDateTime(strDate);
    // Get the date portion of rightnow and testdate (no timestamp)
    var today = rightnow.getLocalDate();
    var istoday = testdate.getLocalDate();
  
    // Compare today and istoday to see if they are the same day
    if(today.compareTo(istoday) == 0){
      return true;
    }
    else {
      return false;
    }
  },

    type: 'NeedItUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-05-09 08:28:03</sys_created_on>
        <sys_id>5775e53547020210b6f9a22f316d437e</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>NeedItUtils</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_include_5775e53547020210b6f9a22f316d437e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-05-09 10:13:42</sys_updated_on>
    </sys_script_include>
</record_update>
